version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: exampleuser
      POSTGRES_PASSWORD: examplepassword
      POSTGRES_DB: jobtrackkerdb
      TZ: "Asia/Bangkok" # Set timezone to Thailand
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U exampleuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   environment:
  #     TZ: "Asia/Bangkok" # Set timezone to Thailand
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data

  jobtracker-api:
    # image: go-api-jobtrackker:latest # Use the existing image if available
    build:
      context: ./jobstracker-api
      dockerfile: Dockerfile
    container_name: goapp
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_started
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRESQL_CONNECTION_STRING: postgres://exampleuser:examplepassword@postgres:5432/jobtrackkerdb?sslmode=disable
      JOBS_WORKER_TRIGGER_TIME: 30
      PYTHONSERVERPATH: http://jobtracker-service:8000
      TZ: "Asia/Bangkok" # Set timezone to Thailand

  jobtracker-web:
    build:
      context: ./jobstracker-web
      dockerfile: Dockerfile
    container_name: reactapp
    ports:
      - "3000:80"
    environment:
      VITE_API_URL: http://jobtracker-api:8080
      VITE_APP_WEBURL: localhost:3000
      TZ: "Asia/Bangkok" # Set timezone to Thailand

  jobtracker-service:
    # image: python-worker-jobtrackker:latest # Use the existing image if available
    build:
      context: ./jobtracker-service
      dockerfile: Dockerfile
    container_name: worker
    ports:
      - "8000:8000"
    environment:
      GOSERVER: http://jobtracker-api:8080
      TZ: "Asia/Bangkok" # Set timezone to Thailand

volumes:
  postgres_data:
  # redis_data: